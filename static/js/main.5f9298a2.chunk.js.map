{"version":3,"sources":["components/TodoItem.js","App.js","index.js"],"names":["TodoItem","props","data","map","ele","i","decor","isCompleted","textDecoration","ListItem","key","item","role","undefined","dense","button","onChange","e","toggleFunction","ListItemIcon","Checkbox","edge","checked","ListItemText","primary","style","ListItemSecondaryAction","onClick","deleteFunction","IconButton","storage","window","localStorage","storedList","JSON","parse","getItem","localItems","App","handleInput","preventDefault","setState","value","target","handleSubmit","todoItem","state","savedItems","syncLocalStorage","toggleItemState","id","temp","deleteItem","filter","stringify","setItem","Container","onSubmit","this","Grid","container","spacing","justify","alignItems","md","TextField","label","margin","variant","Button","color","size","marginTop","type","marginLeft","Divider","xs","List","React","Component","ReactDOM","render","document","getElementById"],"mappings":"sYAsCeA,EA3BE,SAACC,GACd,OACI,oCACKA,EAAMC,KAAKC,KAAI,SAACC,EAAKC,GAClB,IAAIC,EAAQ,GAKZ,OAHIA,EADDF,EAAIG,YACK,CAACC,eAAgB,gBAEhB,CAACA,eAAgB,QAE1B,kBAACC,EAAA,EAAD,CAAUC,IAAKN,EAAIO,KAAMC,UAAMC,EAAWC,OAAK,EAACC,QAAM,EAACC,SAAU,SAACC,GAAD,OAAOhB,EAAMiB,eAAeD,EAAGZ,KAC5F,kBAACc,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAUC,KAAK,QAAQC,QAASlB,EAAIG,eAExC,kBAACgB,EAAA,EAAD,CAAcC,QAASpB,EAAIO,KAAMc,MAAOnB,IACxC,kBAACoB,EAAA,EAAD,CAAyBC,QAAS,SAACV,GAAOhB,EAAM2B,eAAeX,EAAEZ,KAC7D,kBAACwB,EAAA,EAAD,CAAYR,KAAK,OACb,kBAAC,IAAD,cCf5BS,EAAUC,OAAOC,aACjBC,EAAaC,KAAKC,MAAML,EAAQM,QAAQ,aACxCC,EAAa,GACA,MAAdJ,IACCI,EAAaJ,G,IAGIK,E,YACjB,aAAe,IAAD,8BACV,+CAOJC,YAAc,SAACtB,GACXA,EAAEuB,iBACF,EAAKC,SAAS,CAACC,MAAOzB,EAAE0B,OAAOD,SAVrB,EAadE,aAAe,SAAC3B,GACZA,EAAEuB,iBACF,IAAIK,EAAW,CAAClC,KAAM,EAAKmC,MAAMJ,MAAOnC,aAAa,GACrD,EAAKkC,SAAS,CACVM,WAAW,GAAD,mBAAM,EAAKD,MAAMC,YAAjB,CAA6BF,IACvCH,MAAO,KACR,kBAAM,EAAKM,uBAnBJ,EAsBdC,gBAAkB,SAACC,GACf,IAAIC,EAAO,EAAKL,MAAMC,WAAW5C,KAAI,SAACC,EAAKC,GAIvC,OAHG6C,IAAO7C,IACND,EAAIG,aAAeH,EAAIG,aAEpBH,KAEX,EAAKqC,SAAS,CAACM,WAAYI,IAAO,kBAAM,EAAKH,uBA7BnC,EAgCdI,WAAa,SAACF,GACV,IAAIC,EAAO,EAAKL,MAAMC,WAAWM,QAAO,SAACjD,EAAKC,GAAN,OAAYA,IAAM6C,KAC1D,EAAKT,SAAS,CAACM,WAAYI,IAAO,kBAAM,EAAKH,uBAlCnC,EAqCdA,iBAAmB,WACf,IAAIG,EAAOjB,KAAKoB,UAAU,EAAKR,MAAMC,YACrCjB,EAAQyB,QAAQ,WAAYJ,IArC5B,EAAKL,MAAQ,CACTJ,MAAO,GACPK,WAAYV,GAJN,E,sEA0CJ,IAAD,OACL,OACI,kBAACmB,EAAA,EAAD,KACI,0BAAMC,SAAUC,KAAKd,cACjB,kBAACe,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,QAAQ,SAASC,WAAW,UACpD,kBAACJ,EAAA,EAAD,CAAMhD,MAAI,EAACqD,GAAI,GACX,kBAACC,EAAA,EAAD,CAAWf,GAAG,gBAAgBgB,MAAM,kBAAkBC,OAAO,SAASC,QAAQ,WAAW1B,MAAOgB,KAAKZ,MAAMJ,MAAO1B,SAAU0C,KAAKnB,eAErI,kBAACoB,EAAA,EAAD,CAAMhD,MAAI,EAACqD,GAAI,GACX,kBAACK,EAAA,EAAD,CAAQD,QAAQ,YAAYE,MAAM,UAAUC,KAAK,QAAQ9C,MAAO,CAAC+C,UAAW,OAAQC,KAAK,UAAzF,OAEI,kBAAC,IAAD,CAAUhD,MAAO,CAACiD,WAAY,aAK9C,kBAACC,EAAA,EAAD,CAASlD,MAAO,CAAC+C,UAAW,UAC5B,kBAACb,EAAA,EAAD,CAAMC,WAAS,EAACE,QAAQ,SAASC,WAAW,UACxC,kBAACJ,EAAA,EAAD,CAAMhD,MAAI,EAACiE,GAAI,GAAIZ,GAAI,GACnB,kBAACa,EAAA,EAAD,KACI,kBAAC,EAAD,CAAU3E,KAAMwD,KAAKZ,MAAMC,WAAY7B,eAAgB,SAACD,EAAEZ,GAAO,EAAK4C,gBAAgB5C,IAAKuB,eAAgB,SAACX,EAAEZ,GAAH,OAAS,EAAK+C,WAAW/C,c,GA/D/HyE,IAAMC,WChBvCC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.5f9298a2.chunk.js","sourcesContent":["import React from 'react';\n\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nconst TodoItem = (props) => {\n    return (\n        <>\n            {props.data.map((ele, i) => {\n                let decor = '';\n                if(ele.isCompleted) {\n                    decor = {textDecoration: 'line-through'}\n                }\n                else decor = {textDecoration: 'none'}\n                return (\n                    <ListItem key={ele.item} role={undefined} dense button onChange={(e) => props.toggleFunction(e, i)}>\n                        <ListItemIcon>\n                            <Checkbox edge='start' checked={ele.isCompleted} />\n                        </ListItemIcon>\n                        <ListItemText primary={ele.item} style={decor} />\n                        <ListItemSecondaryAction onClick={(e) => {props.deleteFunction(e,i)}} >\n                            <IconButton edge='end'>\n                                <DeleteIcon />\n                            </IconButton>\n                        </ListItemSecondaryAction>\n                    </ListItem>\n                )\n            })}    \n        </>\n    )\n}\n\nexport default TodoItem;","import React from 'react';\n\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\n\nimport SaveIcon from '@material-ui/icons/Save';\n\nimport TodoItem from './components/TodoItem';\n\nlet storage = window.localStorage;\nlet storedList = JSON.parse(storage.getItem('ToDoList'));\nlet localItems = [];\nif(storedList != null) {\n    localItems = storedList;\n}\n\nexport default class App extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            value: '',\n            savedItems: localItems\n        }\n    }\n\n    handleInput = (e) => {\n        e.preventDefault();\n        this.setState({value: e.target.value});\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        let todoItem = {item: this.state.value, isCompleted: false};\n        this.setState({\n            savedItems: [...this.state.savedItems, todoItem],\n            value: ''\n        }, () => this.syncLocalStorage());\n    }\n\n    toggleItemState = (id) => {\n        let temp = this.state.savedItems.map((ele, i) => {\n            if(id === i) {\n                ele.isCompleted = !ele.isCompleted;\n            }\n            return ele;\n        });\n        this.setState({savedItems: temp}, () => this.syncLocalStorage());\n    }\n\n    deleteItem = (id) => {\n        let temp = this.state.savedItems.filter((ele, i) => i !== id);\n        this.setState({savedItems: temp}, () => this.syncLocalStorage());\n    }\n\n    syncLocalStorage = () => {\n        let temp = JSON.stringify(this.state.savedItems)\n        storage.setItem('ToDoList', temp)\n    }\n\n    render() {\n        return (\n            <Container>\n                <form onSubmit={this.handleSubmit}>\n                    <Grid container spacing={3} justify='center' alignItems='center'>\n                        <Grid item md={3}>\n                            <TextField id='outlined-name' label='Enter ToDo Item' margin='normal' variant='outlined' value={this.state.value} onChange={this.handleInput} />\n                        </Grid>\n                        <Grid item md={1}>\n                            <Button variant='contained' color='primary' size='large' style={{marginTop: '5px'}} type='submit'>\n                                Save\n                                <SaveIcon style={{marginLeft: '8px'}} />\n                            </Button>\n                        </Grid>\n                    </Grid>\n                </form>\n                <Divider style={{marginTop: '30px'}} />\n                <Grid container justify='center' alignItems='center'>\n                    <Grid item xs={12} md={4}>\n                        <List>\n                            <TodoItem data={this.state.savedItems} toggleFunction={(e,i) => {this.toggleItemState(i)}} deleteFunction={(e,i) => this.deleteItem(i)} />\n                        </List>\n                    </Grid>\n                </Grid>\n            </Container>\n        )\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));  "],"sourceRoot":""}